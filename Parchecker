class stack:
    def __init__(self):
        self.items = []
        
    def isEmpty(self):
        return self.items == []
    
    def push(self,newitem):
        self.items.append(newitem)
        
    def pop(self):
        return self.items.pop()
        
    def peek(self):
        return self.items[len(self.items)-1]
    
    def size(self):
        return len(self.items)
        
        
        
def parchecker(symstring):
    s = stack()
    balanced = True
    index = 0
    l = len(symstring)
    while index < l and balanced:
        symbol = symstring[index]
        if symbol in '({[':
            s.push(symstring[index])
        elif symbol in ')]}':
            if s.isEmpty():
                balanced = False
            else:
                s.pop()
        index = index + 1
    
    if balanced and s.isEmpty():
        return True
    else:
        return False
        
a = input('enter the test string ')
print(parchecker(a))

